<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<jpa:repositories
		base-package="kimilm.blog.repository" />

	<context:component-scan
		base-package="kimilm.blog" />

	<context:property-placeholder
		location="classpath*:/META-INF/database.properties" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="kimilm.blog.domain" />
		<property name="jpaVendorAdapter"
			ref="hibernateVendorAdapter" />
		<property name="jpaProperties" ref="props" />
	</bean>

	<bean id="hibernateVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<util:properties id="props">
		<prop key="hibernate.show_sql">true</prop>
		<prop key="hibernate.id.new_generator_mappings">false</prop>
	</util:properties>

	<bean class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close" id="dataSource">
		<property name="driverClassName"
			value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	</bean>

</beans>
